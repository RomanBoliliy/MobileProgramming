import React, { useState, useCallback } from 'react';
import { 
  View, Text, FlatList, TouchableOpacity, StyleSheet, RefreshControl, TextInput 
} from 'react-native';

const initialItems = [
  { id: '1', name: 'Item 1', price: 10 },
  { id: '2', name: 'Item 2', price: 20 },
  { id: '3', name: 'Item 3', price: 30 },
  { id: '4', name: 'Item 4', price: 40 },
  { id: '5', name: 'Item 5', price: 50 },
  { id: '6', name: 'Item 6', price: 60 },
  { id: '7', name: 'Item 7', price: 70 },
  { id: '8', name: 'Item 8', price: 80 },
  { id: '9', name: 'Item 9', price: 90 },
  { id: '10', name: 'Item 10', price: 100 },
];

const ItemList = () => {
  const [items, setItems] = useState(initialItems);
  const [searchQuery, setSearchQuery] = useState('');
  const [filterPrice, setFilterPrice] = useState(false);
  const [refreshing, setRefreshing] = useState(false);

  // üìå –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
  const removeItem = (id: string) => {
    setItems((prevItems) => prevItems.filter(item => item.id !== id));
  };

  // üìå –§—É–Ω–∫—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const sortByName = () => {
    setItems((prevItems) => [...prevItems].sort((a, b) => a.name.localeCompare(b.name)));
  };

  const sortByPrice = () => {
    setItems((prevItems) => [...prevItems].sort((a, b) => a.price - b.price));
  };

  // üìå –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ > 50 (—Ç–µ–ø–µ—Ä—å –≤–∫–ª—é—á–∞–µ—Ç—Å—è/–≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è)
  const togglePriceFilter = () => {
    setFilterPrice(!filterPrice);
  };

  // üìå –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –≤—ã–≤–æ–¥–æ–º (–ø–æ–∏—Å–∫ + —Ñ–∏–ª—å—Ç—Ä —Ü–µ–Ω—ã)
  const filteredItems = items
    .filter(item => item.name.toLowerCase().includes(searchQuery.toLowerCase())) // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    .filter(item => (filterPrice ? item.price > 50 : true)); // –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ

  // üìå Pull to Refresh
  const onRefresh = useCallback(() => {
    setRefreshing(true);
    setTimeout(() => {
      setItems(initialItems); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–Ω–æ–≤–æ)
      setRefreshing(false);
    }, 1500);
  }, []);

  // üìå Lazy Loading (–ø–æ–¥–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
  const loadMoreItems = () => {
    const newItems = [
      { id: Math.random().toString(), name: `Item ${items.length + 1}`, price: Math.floor(Math.random() * 100) }
    ];
    setItems([...items, ...newItems]);
  };

  // üìå –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞
  const renderItem = ({ item }) => (
    <View style={styles.itemContainer}>
      <Text style={styles.itemText}>{item.name} - ${item.price}</Text>
      <TouchableOpacity onPress={() => removeItem(item.id)} style={styles.deleteButton}>
        <Text style={styles.deleteText}>X</Text>
      </TouchableOpacity>
    </View>
  );

  return (
    <View style={styles.container}>
      
      {/* üìå –ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ */}
      <TextInput
        style={styles.searchInput}
        placeholder="–ü–æ–∏—Å–∫..."
        value={searchQuery}
        onChangeText={setSearchQuery}
      />

      {/* üìå –ö–Ω–æ–ø–∫–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ */}
      <View style={styles.buttonRow}>
        <TouchableOpacity onPress={sortByName} style={styles.button}><Text>–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å A-Z</Text></TouchableOpacity>
        <TouchableOpacity onPress={sortByPrice} style={styles.button}><Text>–ü–æ —Ü–µ–Ω–µ ‚Üë</Text></TouchableOpacity>
        <TouchableOpacity onPress={togglePriceFilter} style={[styles.button, filterPrice && styles.activeButton]}>
          <Text>–¶–µ–Ω–∞ > 50</Text>
        </TouchableOpacity>
      </View>

      {/* üìå FlatList —Å pull-to-refresh –∏ –ª–µ–Ω–∏–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π */}
      <FlatList
        data={filteredItems}
        keyExtractor={(item) => item.id}
        renderItem={renderItem}
        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}
        onEndReached={loadMoreItems} 
        onEndReachedThreshold={0.3} // –ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ 30% –æ—Ç –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 10,
    backgroundColor: '#f5f5f5',
  },
  searchInput: {
    height: 40,
    borderColor: '#ccc',
    borderWidth: 1,
    borderRadius: 8,
    marginBottom: 10,
    paddingHorizontal: 10,
    backgroundColor: '#fff',
  },
  itemContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    padding: 15,
    marginVertical: 5,
    backgroundColor: '#fff',
    borderRadius: 8,
    borderWidth: 1,
    borderColor: '#ddd',
  },
  itemText: {
    fontSize: 18,
  },
  deleteButton: {
    backgroundColor: 'red',
    padding: 5,
    borderRadius: 5,
  },
  deleteText: {
    color: 'white',
    fontWeight: 'bold',
  },
  buttonRow: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginBottom: 10,
  },
  button: {
    backgroundColor: '#ddd',
    padding: 10,
    borderRadius: 5,
  },
  activeButton: {
    backgroundColor: '#90ee90', // –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞
  },
});

export default ItemList;
